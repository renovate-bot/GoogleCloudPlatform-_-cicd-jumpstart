# Copyright 2023-2005 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is an example tfvars file. Copy this to terraform.tfvars and adjust the values.

# Required: The Google Cloud Project ID to deploy the resources into.
project_id = "REPLACE_WITH_YOUR_PROJECT_ID"

# Optional: The default region for compute resources. Defaults to "us-central1".
# vpc_region = "europe-west1"

# Optional: The region for the Secure Source Manager instance, cf. https://cloud.google.com/secure-source-manager/docs/locations.
# secure_source_manager_region = "europe-west4"

## Artifact Registry
# Optional: The ID of the Artifact Registry repository for container images.
# artifact_registry_repository_id = "my-workstation-images"

## Source Control (GitHub & Secure Source Manager)

# Optional: The owner of the GitHub repository (user or organization).
# github_owner = "my-github-org"

# Optional: The name of the GitHub repository.
# github_repo = "my-image-examples"

# Optional: A regular expression to match GitHub branches that trigger Cloud Build on push.
# git_branches_regexp_trigger = "^dev$"

# Optional: The name of the Secure Source Manager instance.
# secure_source_manager_instance_name = "my-ssm-instance"

# Optional: The name of the Secure Source Manager repository.
# secure_source_manager_repo_name = "my-ssm-repo"

# Optional: The URL of a Git repository to clone into the new Secure Source Manager repository. If null, cloning is skipped.
# secure_source_manager_repo_git_url_to_clone = "https://github.com/GoogleCloudPlatform/cloud-workstations-custom-image-examples.git"

# Optional: The Secure Source Manager (SSM) branch that triggers Cloud Build on push.
# git_branch_trigger = "dev"

# Cloud Workstations

# Cloud Workstations Clusters
cws_clusters = {
  "android" = {
    network    = "default"
    region     = "us-central1"
    subnetwork = "default"
  }
}

# Cloud Workstations Configs
cws_configs = {
  "default" = {
    cws_cluster = "android"
    # idle_timeout_seconds           = 7200
    # machine_type                   = "e2-standard-4"
    # boot_disk_size_gb              = 50
    # disable_public_ip_addresses    = false
    # pool_size                      = 1
    # enable_nested_virtualization   = false
    persistent_disk_size_gb        = 200
    persistent_disk_fs_type        = "ext4"
    persistent_disk_type           = "pd-standard"
    persistent_disk_reclaim_policy = "DELETE"
    # persistent_disk_source_snapshot = null
    # image                          = "us-central1-docker.pkg.dev/cloud-workstations-images/predefined/code-oss:latest"
    custom_image_names             = [
      "android-studio",
      "android-studio-for-platform",
      "code-oss",
      "repo-builder"
    ]
    creators = [
    #   "user1@example.com",
    #   "user2@example.com",
    ]
    instances = [
      {
        name  = "user1-ws"
        # users = ["user1@example.com"]
      },
      {
        name  = "shared-ws"
        # users = ["user1@example.com", "user2@example.com"]
      }
    ]
  },
  "snapshot" = {
    cws_cluster = "android"
    # idle_timeout_seconds           = 7200
    # machine_type                   = "n1-standard-4"
    # boot_disk_size_gb              = 100
    # disable_public_ip_addresses    = false
    # pool_size                      = 0
    # enable_nested_virtualization   = true
    # persistent_disk_size_gb        = null
    # persistent_disk_fs_type        = null
    persistent_disk_type           = "pd-ssd"
    persistent_disk_reclaim_policy = "RETAIN"
    persistent_disk_source_snapshot = "projects/my-project/global/snapshots/my-snapshot"
    # image                          = null
    custom_image_names             = [
      "android-studio",
      "android-studio-for-platform",
      "code-oss",
      "repo-builder"
    ]
    creators = [
    #   "admin@example.com",
    ]
    # instances = []
  }
}

# Custom images for Cloud Workstations
cws_custom_images = {
  "android-studio" : {
    build = {
      dockerfile_path = "examples/images/android/android-studio"
      timeout_seconds = 7200
      machine_type    = "E2_HIGHCPU_32"
    }
    # workstation_config = {
    #   scheduler_region = "us-central1"
    #   ci_schedule      = "0 1 * * *" # Daily at 1 AM
    # }
  },
  "android-studio-for-platform" : {
    build = {
      dockerfile_path = "examples/images/android-open-source-project/android-studio-for-platform"
      timeout_seconds = 7200
      machine_type    = "E2_HIGHCPU_32"
    }
  },
  "code-oss" : {
    build = {
      dockerfile_path = "examples/images/android-open-source-project/code-oss"
      timeout_seconds = 7200
      machine_type    = "E2_HIGHCPU_32"
    }
  },
  "repo-builder" : {
    build = {
      dockerfile_path = "examples/images/android-open-source-project/repo-builder"
      timeout_seconds = 7200
      machine_type    = "E2_HIGHCPU_32"
    }
  },
}

## Android Platform Development

android_branches = [
  # "main",
  # "feature2",
  # "user3",
]

android_targets = {
  # "x86-userdebug" : "aosp_cf_x86_64_phone-trunk_staging-userdebug",
  # "arm64-eng" : "aosp_cf_x86_64_phone-trunk_staging-eng",
}
